<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 构造函数注入：
           使用的标签：constructor-arg
            标签出现的位置：bean标签的内部
            标签中的属性
                type：用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或某些参数的类型
                index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引的位置是从0
    开始
                name：用于指定给构造函数中指定名称的参数赋值
                ====================以上三个用于指定给构造函数中的那个参数赋值==========
                value：用于提供基本类型和String类型的数据
                ref：用于指定其他的Bean类型的数据，它指的就是在spring的Ioc核心容器中出现过的Bean对象
             优势：
                在获取bean对象时，注入数据是必须的操作，否则对象无法创建成功
            弊端：
                改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供

    <bean id="accountService" class="com.zonkidd.service.impl.AccountServiceImpl">
    <constructor-arg name="name" value="zonkidd"> </constructor-arg>
    <constructor-arg name="age" value="18"> </constructor-arg>
    <constructor-arg name="birthday" ref="now"> </constructor-arg>

    </bean>
    <bean id="now" class="java.util.Date"></bean>
            -->


    <!-- set方法注入(更常用)
            涉及标签：property
            出现的位置：bean标签的内部
            标签的属性：
                name：用于指定注入的
                value：用于提供基本类型和和String类型的数据
                ref：用于指定其他bean类型的数据。它指的就是在spring的Ioc核心容器中出现过的Bean对象
            优势：
                创建对象时没有明确的限制，可以直接使用默认构造函数
            劣势：
                如果有某个成员必须有值，则获取对象时set方法无法保证一定注入()

     -->

    <bean id="accountService2" class="com.zonkidd.service.impl.AccountServiceImpl2">
        <property name="name" value="zonkidd2"></property>
        <property name="age" value="18"></property>
        <property name="birthday" ref="now"></property>
        <property name="accountDao" ref="accountDao"></property>
    </bean>
    <bean id="now" class="java.util.Date"></bean>
    <bean id="accountDao" class="com.zonkidd.dao.impl.AccountDaoImpl"></bean>
    <!--复杂类型的注入|集合类型的注入
            用于给List结构集合注入的标签：
                list  、 array 、 set
            用于给Map结构集合注入的标签：
                map props
            结构相同，标签可以互换
    <bean id="accountService3" class="com.zonkidd.service.impl.AccountServiceImpl3">
        <property name="myStrs">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </list>
        </property>
        <property name="mySet">
            <set>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </set>
        </property>
        <property name="myMap">
            <map>
                <entry key="testA" value="AAA"></entry>
                <entry key="testB" value="BBB"></entry>
                <entry key="testC" value="CCC"></entry>
            </map>
        </property>
        <property name="myProps">
            <props>
                <prop key="testA">CCC</prop>
            </props>
        </property>
    </bean>
    -->

</beans>
